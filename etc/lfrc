# Basic Settings
set shell bash
set previewer ~/.local/bin/preview
set preview true
set hidden true
set drawbox true
set icons true
set ignorecase true

# Custom Functions
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        image/*) sxiv "$f";;
        *pdf*) xdg-open "$f";;
        text/*|application/json) $EDITOR "$f";;
        video/*) xdg-open "$f";;
        *) for f in $fx; do setsid $OPENER $f 2>/dev/null & done ;;
    esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir "$ans"
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR "$ans"
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans "$file"
  done

  lf -remote 'send reload'
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR "$ans"
}}

cmd setwallpaper ${{
  cp -f "$f" ~/.local/share/wallpapers/system/background.png
  randomwallpaper "$f" &>/dev/null &
}}

cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd broot_jump ${{
  f=$(mktemp)
  res="$(broot --outcmd $f && cat $f | sed 's/cd //')"
  rm -f "$f"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd open_config  ${{
  $EDITOR $(bookmenu -b ~/.config/bookmenu/configs -f fzf -o)
}}

cmd dragon %dragon-drag-and-drop -a -x $fx
cmd dragon-stay %dragon-drag-and-drop -a $fx
cmd dragon-individual %dragon-drag-and-drop $fx
cmd cpdragon %cpdragon
cmd mvdragon %mvdragon
cmd dlfile %dlfile

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

cmd trash ${{
  if cmd_exists trash; then
     trash "$f"
  else
    mv -f "$f" ~/.local/share/Trash/files/"$f"
  fi
}}

cmd clear_trash ${{
  trash empty
}}

cmd restore_trash ${{
  trash restore "$fx"
}}

cmd stripspace %stripspace "$f"

# Bindings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f

cmd image_preview ${{
    ~/.local/bin/draw_img "$f" 2>/dev/null
}}
map + :image_preview

cmd video_preview ${{
    CACHE=$(mktemp /tmp/thumb_cache.XXXXX)
    ffmpegthumbnailer -i "$f" -o $CACHE -s 0
    ~/.local/bin/draw_img $CACHE && rm $CACHE
}}
map + :video_preview

# File Openers
map ee $$EDITOR "$f"
map u $view "$f"

# Archive Mappings
map az zip
map at tar
map ag targz
map ab targz
map au unarchive

# Trash Mappings
map dd trash
map tc clear_trash
map tr restore_trash

# Broot Mapping
map f broot_jump

# Dragon Mapping
map dr dragon
map ds dragon-stay
map di dragon-individual
map dm mvdragon
map dc cpdragon
map dl dlfile

map ss stripspace

# Basic Functions
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map mr sudomkfile
map md mkdir
map ms $mkscript
map ch chmod
map bg setwallpaper
map o open_config
map br $vimv $fx
map r rename
map H top
map L bottom
map R reload
map C clear
map U unselect

# Movement
map gd cd ~/Documents
map gD cd ~/Downloads
map ge cd ~/Desktop
map gv cd ~/Videos
map gp cd ~/Pictures
map gw cd ~/.local/share/wallpapers
map gtr cd ~/.local/share/Trash/files

map gs. cd ~/.local/bin

map gr. cd ~/Projects
map grh cd ~/Projects/github
map grl cd ~/Projects/gitlab
map grp cd ~/Projects/private

map gc cd ~/.config
map gE cd /etc
map gU. cd /usr
map gUs cd /usr/share
